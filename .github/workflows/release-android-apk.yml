name: release android apk

on:
  workflow_call:
    secrets:
      ANDROID_STOREPASS:
        required: false
    inputs:
      runner:
        description: "workflow-runner"
        default: "ubuntu-latest"
        required: false
        type: string
      app_root:
        description: "app root"
        default: ""
        required: false
        type: string
      artifact_path:
        description: "path to artifact files to save from build step"
        default: ""
        required: false
        type: string
      tool:
        description: "build tool - npm or yarn"
        default: "none"
        required: false
        type: string
      release_tag:
        description: "release tag"
        default: "latest"
        required: false
        type: string

jobs:
  release_android_apk:
    name: release android apk
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 45
    permissions:
      actions: write
      contents: write
      packages: read
    steps:
      - uses: actions/checkout@v4

      - name: setup app artifact
        uses: ./.github/actions/setup-artifact
        id: setup_app_artifact
        with:
          artifact_name: app
          artifact_path: ${{ inputs.app_root }}

      - name: setup build artifact
        uses: ./.github/actions/setup-artifact
        id: setup_build_artifact
        with:
          artifact_name: build
          artifact_path: ${{ inputs.artifact_path }}

      - uses: actions/setup-node@v4
        if: ${{ (inputs.tool == 'npm' || inputs.tool == 'yarn') && steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true' }}
        with:
          node-version: "20"
          cache: "${{ inputs.tool }}"

      - name: install with npm
        if: ${{ inputs.tool == 'npm' && steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true' }}
        run: npm ci

      - name: cache keystore
        if: ${{ steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true' }}
        uses: actions/cache@v4
        id: cache
        with:
          path: ${{ inputs.app_root }}/android/app/keystore.jks
          key: keystore-cache

      - name: generate keystore
        if: ${{ steps.cache.outputs.cache-hit != 'true' && steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true'}}
        id: generate-keystore
        run: |
          keytool -genkeypair -v \
            -keystore ${{ inputs.app_root }}/android/app/keystore.jks \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -alias my-key \
            -storepass "$ANDROID_STOREPASS" \
            -dname "CN=Android, OU=Development, O=App"
        env:
          ANDROID_STOREPASS: ${{ secrets.ANDROID_STOREPASS }}

      - name: set up jdk
        if: ${{ steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true' }}
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "21"

      - name: set up android sdk
        if: ${{ steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true' }}
        uses: android-actions/setup-android@v3
        with:
          packages: "build-tools;35.0.0"

      - name: build apk
        if: ${{ steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true' }}
        run: |
          cd ${{ inputs.app_root }}/android
          ./gradlew assembleRelease

      - name: sign apk
        if: ${{ success() && hashFiles('./nx.json') != '' && steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true'}}
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore ${{ inputs.app_root }}/android/app/keystore.jks \
            -storepass "$ANDROID_STOREPASS" \
            -keypass "$ANDROID_STOREPASS" \
            ${{ inputs.app_root }}/android/app/build/outputs/apk/release/app-release-unsigned.apk my-key
        env:
          ANDROID_STOREPASS: ${{ secrets.ANDROID_STOREPASS }}

      - name: align apk
        if: ${{ success() && hashFiles('./nx.json') != '' && steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true'}}
        run: |
          ${ANDROID_SDK_ROOT}/build-tools/35.0.0/zipalign -v 4 \
            ${{ inputs.app_root }}/android/app/build/outputs/apk/release/app-release-unsigned.apk \
            ${{ inputs.app_root }}/android/app/build/outputs/apk/release/app-release.apk

      - uses: "marvinpinto/action-automatic-releases@latest"
        if: ${{ steps.setup_build_artifact.outputs.exists == 'true' && steps.setup_app_artifact.outputs.exists == 'true' }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ inputs.release_tag }}
          prerelease: false
          title: "Release ${{ inputs.release_tag }}"
          files: |
            ${{ inputs.app_root }}/android/app/build/outputs/apk/release/app-release.apk
