name: publish docker image

on:
  workflow_call:
    inputs:
      runner:
        description: "workflow-runner"
        default: "ubuntu-latest"
        required: false
        type: string
      artifact_path:
        description: "path to artifact files to save from build step"
        default: ""
        required: false
        type: string
      docker_meta:
        description: "docker metadata as json array ([{'name':'docker-image-name','file':'docker/app/Dockerfile'}])"
        default: ""
        required: false
        type: string
      platforms:
        description: "platforms to build the docker image for, separated by comma"
        default: "linux/amd64"
        required: false
        type: string
      registry:
        description: "registry"
        required: false
        type: string
        default: "ghcr.io"
      docker_namespace:
        description: "docker namespace"
        required: false
        type: string
        default: "tehw0lf"
      docker_pre:
        description: "run before building docker image"
        default: ""
        required: false
        type: string

jobs:
  publish_docker_image:
    name: publish docker image
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 30
    permissions:
      actions: read
      contents: write
      packages: write
    strategy:
      matrix:
        docker: ${{ fromJson(inputs.docker_meta) }}
    steps:
      - uses: actions/checkout@v4

      - name: validate docker metadata
        if: ${{ inputs.docker_meta != '' }}
        run: |
          if ! echo '${{ inputs.docker_meta }}' | jq . > /dev/null 2>&1; then
            echo "Error: docker_meta is not valid JSON"
            exit 1
          fi
        shell: bash

      - name: check build artifact existence
        uses: softwareforgood/check-artifact-v4-existence@v0
        id: check_artifact_exists
        with:
          name: build

      - name: download build artifact
        if: ${{ inputs.artifact_path != '' && steps.check_artifact_exists.outputs.exists == 'true' }}
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ${{ inputs.artifact_path }}

      - name: run docker pre script
        if: ${{ inputs.docker_pre != '' && (inputs.artifact_path == '' || steps.check_artifact_exists.outputs.exists == 'true') }}
        run: ${{ inputs.docker_pre }}

      - name: set up docker
        if: ${{ inputs.artifact_path == '' || steps.check_artifact_exists.outputs.exists == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: login
        if: ${{ inputs.artifact_path == '' || steps.check_artifact_exists.outputs.exists == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push image
        if: ${{ inputs.artifact_path == '' || steps.check_artifact_exists.outputs.exists == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.docker.file }}
          push: true
          platforms: ${{ inputs.platforms }}
          tags: ${{ inputs.registry }}/${{ inputs.docker_namespace }}/${{ matrix.docker.name }}:latest
