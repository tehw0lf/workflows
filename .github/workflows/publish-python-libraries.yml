name: publish python libraries

on:
  workflow_call:
    secrets:
      UV_TOKEN:
        required: false
    inputs:
      runner:
        description: "workflow-runner"
        default: "ubuntu-latest"
        required: false
        type: string
      root_dir:
        description: "path to project root"
        default: "."
        required: false
        type: string
      artifact_path:
        description: "path to artifact files to save from build step"
        default: ""
        required: false
        type: string
      tool:
        description: "build tool - uv"
        default: "uv"
        required: false
        type: string

jobs:
  publish_python_libraries:
    name: publish python libraries
    runs-on: ${{ inputs.runner }}
    timeout-minutes: 15
    permissions:
      actions: read
      contents: read
      packages: read
    steps:
      - name: check required secrets
        run: |
          if [[ -z "${{ secrets.UV_TOKEN }}" ]]; then
            echo "::error::UV_TOKEN secret is required for Python publishing"
            echo "FAILURE_REASON=missing_secrets" >> $GITHUB_ENV
            exit 2
          fi

      - uses: actions/checkout@v5

      - name: check build artifact existence
        uses: softwareforgood/check-artifact-v4-existence@v0
        id: check_artifact_exists
        with:
          name: build

      - name: download build artifact
        if: ${{ inputs.artifact_path != '' && steps.check_artifact_exists.outputs.exists == 'true' }}
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ${{ inputs.artifact_path }}

      - uses: astral-sh/setup-uv@v4
        if: ${{ inputs.tool == 'uv' && steps.check_artifact_exists.outputs.exists == 'true'}}
        with:
          enable-cache: true
          cache-dependency-glob: "${{ inputs.root_dir }}/uv.lock"

      - uses: actions/setup-python@v5
        if: ${{ inputs.tool == 'uv' && steps.check_artifact_exists.outputs.exists == 'true' && hashFiles('pyproject.toml') != '' }}
        with:
          python-version-file: "pyproject.toml"

      - name: publish to pypi
        if: ${{ env.UV_PUBLISH_TOKEN != '' && steps.check_artifact_exists.outputs.exists == 'true'}}
        run: uv publish
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.UV_TOKEN }}
